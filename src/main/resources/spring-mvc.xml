<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- springmvc的配置文件中不扫描带有@Service注解的类 -->
    <context:component-scan base-package="com.werner.webapp">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- 配置静态资源：default-servlet-handler将在SpringMVC上下文中定义DefaultServletHttpRequestHandler,
        它会对进入DispatcherServlet的请求进行帅选，如果发现是没有经过映射的请求，就将该请求交由WEB应用服务器默认的 Servlet处理。如果不是静态资源的请求，才由DispatcherServlet继续处理。 -->
    <mvc:default-servlet-handler/>
    <!-- 配置开启注解 -->
    <mvc:annotation-driven/>

    <!-- JSP视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/views" p:suffix=".jsp"
    />

    <!-- SpringMVC中的上传文件配置，在这里配置上传文件大小限制不够灵活，建议使用jQuery框架来配置，这样可以节省服务器的压力 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="utf-8" p:maxInMemorySize="40960" p:maxUploadSize="10485760000"
    />

    <!--start:使用Jackson 2.x的配置，-->
    <!--通过处理器映射DefaultAnnotationHandlerMapping来开启支持@Controller注解-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />-->
    <!--通过处理器适配器AnnotationMethodHandlerAdapter来开启支持@RequestMapping注解-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4"
                  p:fastJsonConfig-ref="fastJsonConfig" p:supportedMediaTypes-ref="supportedMediaTypes"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <util:list id="supportedMediaTypes">
        <value>text/html;charset=UTF-8</value>
        <value>application/json</value>
    </util:list>
    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig"
          p:serializeFilters-ref="serializerFeatures"/>

    <util:list id="serializerFeatures">
        <value>WriteMapNullValue</value>
        <value>QuoteFieldNames</value>
    </util:list>

    <!--解决axaj跨域请求-->
    <bean id="fastJsonpResponseBodyAdvice" class="com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice">
        <constructor-arg>
            <list>
                <value>callback</value>
                <value>jsonp</value>
            </list>
        </constructor-arg>
    </bean>
</beans>
